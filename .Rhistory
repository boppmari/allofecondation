library(adegenet)
library(ade4)
#library(devtools)
#install_github("jgx65/hierfstat")
###### run from here
library("hierfstat")
library(ggplot2)
library("Hmisc")
library(corrplot)
library(PopGenKit)
library(poppr)
library(knitr)
library(reshape)
java2df <- function(infile){
# infile with full path e.g. infile="C:/Users/gayl/DONNEES/DATA_2/Medicago_systemerepro/Intrapop/pop_F20043/haplo_java_OK/F20043_3years_CORRECTED_java_filtered.csv"
total <- read.table(infile, header=T, sep=";", colClasses="character")
total_OK <- total[,-1:-5]
locnames <- colnames(total)[-1:-5]
Nind = nrow(total)
Nloc = length(locnames)
dimnames(total_OK) = list(total[,5],locnames)
for (i in (1:nrow(total_OK))) {
for (j in (1:ncol(total_OK))) {
total_OK[i,j] <- ifelse(total_OK[i,j]=="0",NA,ifelse(nchar(total_OK[i,j])<6
,paste("0",total_OK[i,j],sep=""),total_OK[i,j]))
}
}
pop <- total[,1]
region <- total[,2]
pop_year <- total[,3]
year <- total[,4]
return(list(total, total_OK, pop, region, year, pop_year))
}
total_OK_list <- java2df("~/DATA/total_pop_filtered.csv")
total <- total_OK_list[[1]]
total_OK <- total_OK_list[[2]]
pop <- as.data.frame(total_OK_list[[3]])
region <- as.data.frame(total_OK_list[[4]])
year <- as.data.frame(total_OK_list[[5]])
pop_year <- as.data.frame(total_OK_list[[6]])
Nloc <- ncol(total_OK)
locnames <- colnames(total_OK)
Nech <- with(total,table(pop_year))
Npop1 <- Nech[[1]]
Npop2 <- Nech[[2]]
Npop3 <- Nech[[3]]
Npop4 <- Nech[[4]]
Npop5 <- Nech[[5]]
Npop6 <- Nech[[6]]
Npop7 <- Nech[[7]]
Npop8 <- Nech[[8]]
Npop9 <- Nech[[9]]
Npop10 <- Nech[[10]]
Npop11 <- Nech[[11]]
Npop12 <- Nech[[12]]
Npop13 <- Nech[[13]]
Npop14 <- Nech[[14]]
Npop15 <- Nech[[15]]
Npop16 <- Nech[[16]]
Npop17 <- Nech[[17]]
Npop18 <- Nech[[18]]
Npop19 <- Nech[[19]]
Npop20 <- Nech[[20]]
Npop21 <- Nech[[21]]
Npop22 <- Nech[[22]]
Nind=nrow(total)
pop_genind <- df2genind(X=total_OK, ncode=3, ploidy=2, pop=total[,1])
strata <- data.frame(total$region, total$pop, total$year)
colnames(strata) <- c("Region", "Pop", "Year")
strata(pop_genind) <- strata
nameStrata(pop_genind) <- ~Region/Pop/Year
pop_genind
all_rich<-read.table("~/DATA/ADZE/ADZE_total_r")
colnames(all_rich)<-c("Annee","N","Nloc","mean_allrich","var_allrich","sd_allrich")
Na <- subset(all_rich, all_rich$N == 60)
#par(mfrow=c(1,1))
#plot(Na$mean_allrich)
pop_year <- colsplit(Na[,1], split="_", c("pop","year"))
Na <- cbind(pop_year, Na[,-1])
region <- as.data.frame(c(rep("Espagne",6),rep("Corse",9),rep("France",7)))
colnames(region) <- c("Region")
Na <- cbind(region, Na)
rownames(Na) <- c(1:nrow(Na))
Na$year <- as.factor(Na$year)
nb_year <- as.data.frame(c(2,1,2,1,2,1,2,1,3,1,2,3,2,1,3,2,1,2,1,1,2,3), row.names = rownames(Na))
colnames(nb_year) <- c("nb_year")
Na <- cbind(Na, nb_year)
Na$nb_year <- as.factor(Na$nb_year)
par(mfrow=c(1,3))
plot(mean_allrich~Region, data=Na, main="Mean_allrich in function of region")
plot(mean_allrich~pop, data=Na, las=2, main = "Mean_allrich in function of population")
plot(mean_allrich~nb_year, data=Na, las=1, main = "Mean_allrich in function of year")
par(mfrow=c(1,1))
barplot(tapply(Na$mean_allrich, list(Na$nb_year, Na$pop), mean), beside=T, ylim=c(0,7), col=c("orange","yellow","cornsilk"))
labs <- c("year_1", "year_2", "year_3")
legend("topleft", labs, fill = c("orange", "yellow", "cornsilk"))
model <- aov(Na$mean_allrich~Na$nb_year*Na$pop)
summary(model)
summary.lm(model)
test <- subset(Na, Na$nb_year != 3)
par(mfrow=c(1,1))
barplot(tapply(test$mean_allrich, list(test$nb_year, test$pop), mean), beside=T, ylim=c(0,7), col=c("orange","yellow"))
labs <- c("year_1", "year_2")
legend("topleft", labs, fill = c("orange", "yellow"))
model <- aov(test$mean_allrich~test$nb_year*test$pop)
summary.lm(model)
View(test)
model <- lm(test$mean_allrich~test$nb_year*test$pop)
summary(model)
model <- lm(Na$mean_allrich~Na$nb_year*Na$pop)
summary(model)
summary(reg_year)
reg_year <- lm(mean_allrich~nb_year, data=Na)
anova(reg_year)
summary(reg_year)
model <- lm(Na$mean_allrich~Na$nb_year+Na$pop)
summary(model)
tapply(Na$mean_allrich, Na$nb_year, var)
fligner.test(Na$mean_allrich~Na$population)
fligner.test(Na$mean_allrich~Na$nb_year)
bartlett.test(Na$mean_allrich~Na$nb_year) # (more a test of non normality than of equality of variances)
plot(Na$mean_allrich)
summary(reg_year)
descriptif <- read.table(file = "He.csv", sep = ";", header = TRUE, dec = ",")
descriptif[,3] <- as.factor(descriptif[,3])
Na <- cbind(Na, descriptif[,8])
colnames(Na) <- c("region", "population", "year", "N", "Nloc", "mean_allrich", "var_allrich", "sd_allrich", "s")
par(mfrow=c(1,1))
plot(mean_allrich~s, data=Na, pch=15, cex=0.5, main="Mean_allrich in function of s")
Na <- subset(all_rich, all_rich$N == 60)
#par(mfrow=c(1,1))
#plot(Na$mean_allrich)
pop_year <- colsplit(Na[,1], split="_", c("pop","year"))
Na <- cbind(pop_year, Na[,-1])
region <- as.data.frame(c(rep("Espagne",6),rep("Corse",9),rep("France",7)))
colnames(region) <- c("Region")
Na <- cbind(region, Na)
rownames(Na) <- c(1:nrow(Na))
Na$year <- as.factor(Na$year)
nb_year <- as.data.frame(c(2,1,2,1,2,1,2,1,3,1,2,3,2,1,3,2,1,2,1,1,2,3), row.names = rownames(Na))
colnames(nb_year) <- c("nb_year")
Na <- cbind(Na, nb_year)
Na$nb_year <- as.factor(Na$nb_year)
descriptif <- read.table(file = "He.csv", sep = ";", header = TRUE, dec = ",")
descriptif[,3] <- as.factor(descriptif[,3])
View(descriptif)
Na <- cbind(Na, descriptif[,8])
colnames(Na) <- c("region", "population", "year", "N", "Nloc", "mean_allrich", "var_allrich", "sd_allrich", "nb_year", "s")
View(descriptif)
par(mfrow=c(1,1))
plot(mean_allrich~s, data=Na, pch=15, cex=0.5, main="Mean_allrich in function of s")
plot(Na$s)
shapiro.test(Na$s)
reg_region <- lm(He~Region, data=descriptif)
anova(reg_region)
summary(reg_region)
shapiro.test(descriptif$He)
qqnorm(Na$mean_allrich)
qqnorm(descriptif$He)
qqline(descriptif$He)
qqnorm(Na$mean_allrich)
qqline(Na$mean_allrich)
hist(Na$mean_allrich, main="")
hist(Na$mean_allrich, main="", col="grey")
par(mfrow=c(1,2))
hist(Na$mean_allrich, main="", col="grey")
qqnorm(Na$mean_allrich)
qqline(Na$mean_allrich)
par(mfrow=c(1,2))
hist(Na$mean_allrich, main="Mean_allrich distribution", ylab="mean allelic richness", col="grey")
qqnorm(Na$mean_allrich)
par(mfrow=c(1,2))
hist(Na$mean_allrich, main="Mean_allrich distribution", xlab="mean allelic richness", col="grey")
qqnorm(Na$mean_allrich)
qqline(Na$mean_allrich)
qqnorm(rnorm(100, mean = 5, sd = 3))
qqline(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
qqnorm(runif(100, min = 2, max = 4))
qqline(runif(100, min = 2, max = 4))
shapiro.test(runif(100, min = 2, max = 4))
set.seed(100)
x <- rbinom(15,5,.6)
qqnorm(x)
qqline(x)
shapiro.test(x)
par(mfrow=c(1,2))
hist(Na$mean_allrich, main="Mean_allrich distribution", xlab="mean allelic richness", col="grey")
qqnorm(Na$mean_allrich)
qqline(Na$mean_allrich)
shapiro.test(Na$mean_allrich)
x <- exp(rnorm(30))
qqnorm(x)
qqline(x)
shapiro.test(x)
qqnorm(Na$mean_allrich)
qqline(Na$mean_allrich)
par(mfrow=c(1,3))
plot(mean_allrich~Region, data=Na, main="Mean_allrich in function of region")
plot(mean_allrich~pop, data=Na, las=2, main = "Mean_allrich in function of population")
plot(mean_allrich~nb_year, data=Na, las=1, main = "Mean_allrich in function of year")
tukey <- TukeyHSD(reg_pop)
reg_pop <- lm(mean_allrich~pop, data=Na)
anova(reg_pop)
summary(reg_pop)
Na <- subset(all_rich, all_rich$N == 60)
#par(mfrow=c(1,1))
#plot(Na$mean_allrich)
pop_year <- colsplit(Na[,1], split="_", c("pop","year"))
Na <- cbind(pop_year, Na[,-1])
region <- as.data.frame(c(rep("Espagne",6),rep("Corse",9),rep("France",7)))
colnames(region) <- c("Region")
Na <- cbind(region, Na)
rownames(Na) <- c(1:nrow(Na))
Na$year <- as.factor(Na$year)
nb_year <- as.data.frame(c(2,1,2,1,2,1,2,1,3,1,2,3,2,1,3,2,1,2,1,1,2,3), row.names = rownames(Na))
colnames(nb_year) <- c("nb_year")
Na <- cbind(Na, nb_year)
Na$nb_year <- as.factor(Na$nb_year)
reg_pop <- lm(mean_allrich~pop, data=Na)
anova(reg_pop)
summary(reg_pop)
tukey <- TukeyHSD(reg_pop)
reg_pop <- aov(mean_allrich~pop, data=Na)
summary.lm(reg_pop)
tukey <- TukeyHSD(reg_pop)
tukey
plot(tukey)
print(tukey)
lnl_04=-97.0318487063306
lnl_10= -639.204119445094
lnl_constrained=-737.438552667868
deltadev=2*(lnl_04+lnl_10-(lnl_constrained))
pchisq(deltadev, 1, lower.tail = FALSE)
lnl_04=-639.204119445094
lnl_10=-158.179966931299
lnl_constrained=-118.595323260513
deltadev=2*(lnl_04+lnl_10-(lnl_constrained))
pchisq(deltadev, 1, lower.tail = FALSE)
lnl_04=-639.204119445094
lnl_10=-158.179966931299
lnl_constrained=-801.767894227399
deltadev=2*(lnl_04+lnl_10-(lnl_constrained))
pchisq(deltadev, 1, lower.tail = FALSE)
lnl_04=-23.3920431721168
lnl_10=-89.2144621381819
lnl_constrained=-118.595323260513
deltadev=2*(lnl_04+lnl_10-(lnl_constrained))
pchisq(deltadev,1,lower.tail = FALSE)
lnl_04=-73.5752217557454
lnl_10=-338.96917107979
lnl_constrained=-415.517747200074
deltadev=2*(lnl_04+lnl_10-(lnl_constrained))
pchisq(deltadev,1, lower.tail = FALSE)
lnl_04=-33.7088540126584
lnl_10=-166.566487284293
lnl_constrained=-206.485973210712
deltadev=2*(lnl_04+lnl_10-(lnl_constrained))
pchisq(deltadev,1, lower.tail = FALSE)
lnl_04=-20.3252351916352
lnl_10=-83.469459564388
lnl_constrained=-107.848301976694
deltadev=2*(lnl_04+lnl_10-(lnl_constrained))
pchisq(deltadev, 1, lower.tail = FALSE)
help(merge)
help("function")
load("~/DATA/Modelisation/Mutation-Drift equilibrium/allogamy/VerifMiguel/lastVerif/equilibrium_1000rep.RData")
load("~/DATA/Modelisation/Mutation-Drift equilibrium/allogamy/VerifMiguel/sampleGenomes/allogamy_equilibrium_10000.RData")
NbSimuls <- 10000
NbGenerations <- 19
sample_size <- 50
sigma <- 0
N <- 500 # Taille de population (nb individus)
Ne <- N*(2-sigma) # taille efficace en nombre de sÃ©quences
u <- 0.005
genome_length <- 1
theta <- 2*Ne*u*genome_length
expected_He  <- 1-(1/(theta+1))
expected_PI  <- theta
expected_S   <- theta*sum(1/1:(sample_size-1))
expected_K   <- theta*sum(1/(0:(sample_size-1)+theta))
S_table <- as.data.frame(S_table)
S_table$Generation <- as.factor(S_table$Generation)
mean_S <- tapply(S_table$S, S_table$Generation, mean)
test <- NULL
gen <- seq(from = 500, to = 10000, by = 500)
for (generation in gen){
for (i in 1:nrow(S_table)){
if (S_table[i,2] == generation){
test <- rbind(test, S_table[i,])
}
}
}
mean_S_test <- tapply(test$S, test$Generation, mean)
ylab = "Number of polymorphic sites (S)")
boxplot(S ~ Generation, data = test, main = "", las=2, col = "lightgray", xlab = "Generation number",
ylab = "Number of polymorphic sites (S)")
abline(h=expected_S, col = "red", lwd = 3)
points(mean_S_test, col = "blue", pch = 18, cex = 1.5)
legend("topleft", legend = c("Expected S", "Mean simulated S"), col = c("red", "blue"), lty = c(1,0), lwd = 3,
pch = c(0,18), box.lty = 1)
setwd("~/DATA/Allofecondation")
data <- read.csv("germinationR.csv", header = TRUE, sep = ";", dec = ".")
data$Zone <- as.factor(data$Zone)
data$Zone0 <- as.factor(data$Zone0)
data$Block <- as.factor(data$Block)
data$Plate <- as.factor(data$Plate)
data$IDPod <- as.factor(data$IDPod)
data$IDSeed <- as.factor(data$IDSeed)
#summary(data)
# Subset removing interpop to see if there is a Zone effect within intrapop
data_intrapop <- subset(data, Plan == "Intrapop", select = c(Vgonflement, Vradicule, Vcotyledon, Block, Zone, Plan, UniqueGeno, Plate, UniqueQuadrat, Plant, IDPod, IDBox))
data_intrapop$Zone <- as.factor(data_intrapop$Zone)
seed <- data[, c("Plant", "Zone", "Zone0", "Plan", "UniqueQuadrat", "UniqueGeno", "IDPod", "Block", "NbSeed", "time_flo")]
seed <- unique(seed)
row.names(seed) <- 1:nrow(seed)
seed_intrapop <- subset(seed, Plan == "Intrapop", select = c(NbSeed, Zone, Plan, UniqueGeno, UniqueQuadrat, Plant, time_flo))
seed <- seed[, c("Plant", "Zone0", "Plan", "UniqueQuadrat", "UniqueGeno", "IDPod", "Block", "NbSeed", "time_flo")]
seed2 <- na.omit(seed)
seedPlant <- aggregate(seed$NbSeed ~ seed$Plant, FUN = sum)
colnames(seedPlant) <- c("Plant", "NbSeedPlant")
seedPlant <- merge(seedPlant, data, by = "Plant")
seedPlant <- unique(seedPlant[, c("Plant", "NbSeedPlant", "Zone", "Zone0", "Plan", "UniqueQuadrat", "UniqueGeno", "time_flo", "L_max_flo", "TotalNbPods")])
par(mfrow=c(2, 2))
boxplot(NbSeedPlant ~ UniqueGeno, data = seedPlant, main = "NbSeedPlant ~ UniqueGeno", varwidth = TRUE, ylab = "Number of seeds per plant", las = 2)
boxplot(NbSeedPlant ~ Zone0, data = seedPlant, main = "NbSeedPlant ~ Zone", varwidth = TRUE, xlab = "Zone", ylab = "Number of seeds per plant", las = 1)
boxplot(NbSeedPlant ~ Plan, data = seedPlant, main = "NbSeedPlant ~ Plan", varwidth = TRUE, xlab = "Plan", ylab = "Number of seeds per plant", las = 1)
boxplot(NbSeedPlant ~ UniqueQuadrat, data = seedPlant, main = "NbSeedPlant ~ Quadrat", varwidth = TRUE, xlab = "Quadrat", ylab = "Number of seeds per plant", las = 2)
seedPlant_intra <- subset(seedPlant, Plan == "Intrapop", select = c(NbSeedPlant, Zone, Plan, UniqueGeno, UniqueQuadrat, Plant, time_flo, TotalNbPods))
mod1 <- lmer(NbSeedPlant ~ Zone + (1|UniqueGeno) + (1|UniqueQuadrat) + (1|Plant), data = seedPlant_intra)
library(lme4)
library(MASS)
library(MuMIn)
library(lattice)
library(boot)
library(sjPlot)
library(sjmisc)
library(ggplot2)
library(gridExtra)
library(knitr)
mod1 <- lmer(NbSeedPlant ~ Zone + (1|UniqueGeno) + (1|UniqueQuadrat) + (1|Plant), data = seedPlant_intra)
mod1 <- glmer(NbSeedPlant ~ Zone + (1|UniqueGeno) + (1|UniqueQuadrat) + (1|Plant), data = seedPlant_intra, family = "Poisson")
mod1 <- glmer(NbSeedPlant ~ Zone + (1|UniqueGeno) + (1|UniqueQuadrat) + (1|Plant), data = seedPlant_intra, family = "poisson")
seedPlant <- na.omit(seedPlant[, -3:-4])
m <- lmer(NbSeedPlant ~ Plan + (0 + Plan|UniqueGeno), data = seedPlant)
m1 <- lmer(NbSeedPlant ~ Plan + time_flo + TotalNbPods + (0 + Plan|UniqueGeno), data = seedPlant)
par(mfrow = c(1,2))
qqnorm(resid(m1))
qqline(resid(m1), col = "red")
hist(resid(m1), xlim = c(-max(sqrt((resid(m1))^2)), max(sqrt((resid(m1))^2))), main = "Residuals distribution", col = "lightgray", las = 1)
mod2 <- lmer(NbSeedPlant ~ (1|UniqueGeno) + (1|UniqueQuadrat) + (1|Plant), data = seedPlant_intra, family = "poisson")
mod2 <- glmer(NbSeedPlant ~ (1|UniqueGeno) + (1|UniqueQuadrat) + (1|Plant), data = seedPlant_intra, family = "poisson")
anova(mod1, mod2)
m3 <- glmer(NbSeedPlant ~ Zone + (1|UniqueQuadrat) + (1|Plant), data = seedPlant_intra, family = "poisson")
anova(mod1, m3)
m4 <- glmer(NbSeedPlant ~ Zone + (1|UniqueGeno) + (1|Plant), data = seedPlant_intra, family = "poisson")
anova(mod1, m4)
m5 <- glmer(NbSeedPlant ~ Zone + (1|UniqueGeno) + (1|UniqueQuadrat), data = seedPlant_intra, family = "poisson")
anova(mod1, m5)
anova(mod1, mod2)
anova(mod1, m3)
anova(mod1, m4)
anova(mod1, m5)
model.sel(mod1, mod2, m3, m4, m5)
m <- glmer(NbSeedPlant ~ Zone + (1|UniqueQuadrat) + (1|Plant), data = seedPlant_intra, family = "poisson")
m1 <- glmer(NbSeedPlant ~ (1|UniqueQuadrat) + (1|Plant), data = seedPlant_intra, family = "poisson")
anova(m, m1)
m2 <- glmer(NbSeedPlant ~ Zone + (1|Plant), data = seedPlant_intra, family = "poisson")
anova(m, m2)
m3 <- glmer(NbSeedPlant ~ Zone + (1|UniqueQuadrat), data = seedPlant_intra, family = "poisson")
anova(m, m3)
qqnorm(resid(m))
qqline(resid(m))
hist(resid(m))
seedPlant_inter <- subset(seedPlant, Plan == "interpop", select = c(NbSeedPlant, Zone, Plan, UniqueGeno, UniqueQuadrat, Plant, time_flo, TotalNbPods))
seedPlant_inter <- subset(seedPlant, Plan == "interpop", select = c(NbSeedPlant, Plan, UniqueGeno, UniqueQuadrat, Plant, time_flo, TotalNbPods))
m1 <- glmer(NbSeedPlant ~ (1|UniqueGeno) + (1|UniqueQuadrat) + (1|Plant), data = seedPlant_inter, family = "poisson")
m2 <- glmer(NbSeedPlant ~ (1|UniqueQuadrat) + (1|Plant), data = seedPlant_inter, family = "poisson")
anova(m1, m2)
m3 <- glmer(NbSeedPlant ~ (1|UniqueGeno) + (1|Plant), data = seedPlant_inter, family = "poisson")
anova(m1, m3)
m4 <- glmer(NbSeedPlant ~ (1|UniqueGeno) + (1|UniqueQuadrat), data = seedPlant_inter, family = "poisson")
anova(m1, m4)
model.sel(m1, m2, m3, m4)
m <- glmer(NbSeedPlant ~ (1|UniqueGeno) + (1|Plant), data = seedPlant_inter, family = "poisson")
m1 <- glmer(NbSeedPlant ~ (1|Plant), data = seedPlant_inter, family = "poisson")
anova(m, m1)
m2 <- glmer(NbSeedPlant ~ (1|UniqueGeno), data = seedPlant_inter, family = "poisson")
anova(m, m2)
model.sel(m, m1, m2)
summary(m)
View(seedPlant_inter)
m <- glmer(NbSeedPlant ~ Plan + (1|UniqueGeno) + (1|UniqueQuadrat) + (1|Plant), data = seedPlant, family = "poisson")
summary(m)
mod1 <- glmer(NbSeedPlant ~ Zone + (1|UniqueGeno:Zone) + (1|UniqueQuadrat) + (1|Plant), data = seedPlant_intra, family = "poisson")
mod2 <- glmer(NbSeedPlant ~ (1|UniqueGeno:Zone) + (1|UniqueQuadrat) + (1|Plant), data = seedPlant_intra, family = "poisson")
anova(mod1, mod2)
m3 <- glmer(NbSeedPlant ~ Zone + (1|UniqueGeno) + (1|UniqueQuadrat) + (1|Plant), data = seedPlant_intra, family = "poisson")
anova(mod1, m3)
m <- glmer(NbSeedPlant ~ Plan + (1|UniqueGeno:Plan) + (1|UniqueQuadrat) + (1|Plant), data = seedPlant, family = "poisson")
summary(m)
m <- glmer(NbSeedPlant ~ Plan + (0 + Plan|UniqueGeno) + (1|UniqueQuadrat) + (1|Plant), data = seedPlant, family = "poisson")
summary(m)
m1 <- glmer(NbSeedPlant ~ (0 + Plan|UniqueGeno) + (1|UniqueQuadrat) + (1|Plant), data = seedPlant, family = "poisson")
anova(m, m1)
m2 <- glmer(NbSeedPlant ~ Plan + (1|UniqueGeno) + (1|UniqueQuadrat) + (1|Plant), data = seedPlant, family = "poisson")
anova(m, m2)
m3 <- glmer(NbSeedPlant ~ Plan + (0 + Plan|UniqueGeno) + (1|Plant), data = seedPlant, family = "poisson")
anova(m, m3)
m4 <- glmer(NbSeedPlant ~ Plan + (0 + Plan|UniqueGeno) + (1|UniqueQuadrat), data = seedPlant, family = "poisson")
anova(m, m4)
model.sel(m, m1, m2, m3, m4)
m <- glmer(NbSeedPlant ~ Plan + (1|UniqueGeno) + (1|UniqueQuadrat) + (1|Plant), data = seedPlant, family = "poisson")
m1 <- glmer(NbSeedPlant ~ (1|UniqueGeno) + (1|UniqueQuadrat) + (1|Plant), data = seedPlant, family = "poisson")
anova(m, m1)
m2 <- glmer(NbSeedPlant ~ Plan + (1|UniqueQuadrat) + (1|Plant), data = seedPlant, family = "poisson")
anova(m, m2)
m3 <- glmer(NbSeedPlant ~ Plan + (1|UniqueGeno) + (1|Plant), data = seedPlant, family = "poisson")
anova(m, m3)
m4 <- glmer(NbSeedPlant ~ Plan + (1|UniqueGeno) + (1|UniqueQuadrat), data = seedPlant, family = "poisson")
anova(m, m4)
model.sel(m, m1, m2, m3, m4)
par(mfrow = c(1,2))
qqnorm(resid(m))
qqline(resid(m))
hist(resid(m))
```
summary(m)
dotplot(ranef(m)$UniqueGeno)
dotplot(ranef(m)$UniqueGeno[,1])
dotplot(ranef(m)$UniqueGeno[1,])
ranef(m)
sjp.glmer(m, y.offset = 0.4)
blup <- ranef(m)
blup
dotplot(blup$UniqueGeno)
summary(m)
